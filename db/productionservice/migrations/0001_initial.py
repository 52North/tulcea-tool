# Generated by Django 2.2.3 on 2020-06-25 12:19

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('storagepoint', '0001_initial'),
        ('salepoint', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Productionservice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Name')),
                ('type', models.CharField(blank=True, choices=[('certificate', 'Certificate of producer'), ('small_company', 'Small company'), ('small_gardening', 'Small gardening')], max_length=15, null=True, verbose_name='Type')),
                ('product', models.TextField(blank=True, null=True, verbose_name='Main product(s)')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Telephone')),
                ('email', models.TextField(blank=True, null=True, verbose_name='E-mail')),
                ('website', models.TextField(blank=True, null=True, verbose_name='Website')),
                ('toggle', models.CharField(blank=True, choices=[('gps', 'Use GPS'), ('interactive', 'Point on Map'), ('manual', 'Enter Manually')], max_length=11, null=True, verbose_name='Location Mode')),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Location')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('accuracy', models.FloatField(blank=True, null=True, verbose_name='GPS Accuracy')),
                ('raw_material', models.TextField(blank=True, null=True, verbose_name='Source of raw material')),
                ('water_quantity', models.FloatField(blank=True, null=True, verbose_name='Water quantity need (in m³ per month)')),
                ('energy_consumption', models.FloatField(blank=True, null=True, verbose_name='Average energy consumption (in kWh per month)')),
                ('distance', models.FloatField(blank=True, null=True, verbose_name='Distance: production site → storage → shop')),
                ('covid_affected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=3, null=True, verbose_name='Are the measures taken in the context of limiting COVID-19 infection affecting you?')),
                ('main_effect', models.CharField(blank=True, choices=[('scaderea_vanzarilor', 'Scăderea vânzărilor'), ('scaderea_cifrei', 'Scăderea cifrei de afaceri'), ('disponibilizari', 'Disponibilizări'), ('intarzieri', 'Întârzieri la plata furnizorilor'), ('dificultati', 'Dificultăţi la încasare'), ('restrangerea', 'Restrângerea activității'), ('suspendarea', 'Suspendarea temporară a activităţii'), ('inchiderea', 'Închiderea firmei'), ('reprofilare', 'Reprofilare')], max_length=19, null=True, verbose_name='The main effect is')),
                ('turnover_decrease', models.CharField(blank=True, choices=[('0_20', '0 – 20 %'), ('20_40', '20 – 40 %'), ('40_60', '40 – 60 %'), ('More_60', '&gt; 60 %')], max_length=7, null=True, verbose_name='What is the percentage by which you estimate the decrease in turnover?')),
                ('salepoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='salepoint.Salepoint', verbose_name='Sale point')),
                ('storagepoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='storagepoint.Storagepoint', verbose_name='Storage point')),
            ],
            options={
                'verbose_name': 'productionservice',
                'verbose_name_plural': 'productionservices',
            },
        ),
    ]
